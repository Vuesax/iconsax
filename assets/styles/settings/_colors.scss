
@function generateColorScheme($color) {
 $c: $color;
  $colors: ('default': $c) !default;

  @for $i from 1 through 10 {
    $colors: map-merge($colors, ('lighten-#{$i}': lighten($c, $i * 5)))
  }
  @for $i from 1 through 10 {
    $colors: map-merge($colors, ('darken-#{$i}': darken($c, $i * 5)))
  }
  @for $i from 1 through 10 {
    $colors: map-merge($colors, ('glassy-#{$i}': transparentize($c, ($i /10))))
  }
  @for $i from 1 through 10 {
    $colors: map-merge($colors, ('pale-#{$i}':  desaturate($c, percentage($i /10))))
  }

  @return $colors
}


$colors: (
  'primary': generateColorScheme(#195bff),
  'purple': generateColorScheme(#8f00ff),
  'blue': generateColorScheme(#0019FF),
  'pink': generateColorScheme(#FF00C3),
  'orange': generateColorScheme(#FF5800),
  'gold': generateColorScheme(#A57C00),
  'green': generateColorScheme(#299617),
  'cyan': generateColorScheme(#00EEFF),
  'yellow': generateColorScheme(#FFD300),
  'success': generateColorScheme(#6EFF00),
  'red': generateColorScheme(#FF1100),
  'background': generateColorScheme(#0f0f10),
  'grey': generateColorScheme(#6e6e81ff),
) !default;

